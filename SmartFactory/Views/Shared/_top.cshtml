@using SmartFactory.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@using Microsoft.AspNetCore.Http;



@{ string urlcheck = Context.Request.Path;
    string page_directory = urlcheck.Split('/')[1];
    string page_site = "xx";
    try
    {
        page_site = urlcheck.Split('/')[2];
    }
    catch
    {
        page_site = "index";
    }

    string web_user_id = User.Identity.Name ?? "";
    var db = new db_e();

    int auth_it = 0;
    string web_auth = "";
    string user_auth = "N";
    // 현재 페이지 정보 찾기

    string _language = "korea";
    try
    {
        page_site = urlcheck.Split('/')[2];
    }
    catch
    {

    }
    var _list_user = (from a in db.user where a.user_id == web_user_id select a).FirstOrDefault();


    try
    {


        if (_list_user != null)
        {

            _language = _list_user.language;



            web_auth = _list_user.user_auth;


            if (web_auth.Contains(page_site))
            {


                user_auth = "Y";
            }

            auth_it = _list_user.check_auth;

            if (auth_it >= 8)
            {
                user_auth = "Y";


            }

            if (user_auth == "Y")
            {

                <text>
                    <script type="text/javascript">
                        $(document).ready(function () {

                            $(".check_auth").css("display", "block");

                        });
                    </script>
                </text>


            }
            else
            {

                <text>
                    <script type="text/javascript">
                        $(document).ready(function () {

                            $(".check_auth").css("display", "none");

                        });
                    </script>
                </text>

            }


        }
        else
        {

            <text>
                <script type="text/javascript">
                    $(document).ready(function () {

                        $(".check_auth").css("display", "none");

                    });
                </script>
            </text>

        }

        CookieOptions cookieOptions = new CookieOptions();
        Context.Response.Cookies.Append("language", _language, cookieOptions);
   





    }
    catch
    {
    }

}

<nav class="navbar navbar-default" style="background-color: #e5e5e7; height: 60px;">

    <div class="container-fluid">

        <div class="navbar-minimize">

            <img src="~/images/icon/icon_menu2.png" id="" style="cursor: pointer;position:relative;top:10px" class="minimizeSidebar visible-on-sidebar-regular" />
            @*<i class="fa fa-navicon visible-on-sidebar-mini" style="cursor: pointer"></i>*@

            <img src="~/images/icon/icon_menu3.png" style="cursor: pointer;position:relative;top:10px" class="minimizeSidebar visible-on-sidebar-mini" />

        </div>

        <div class="navbar-header">


            @{get_name(page_directory, page_site); }




        </div>

        <div class="collapse navbar-collapse">



            <ul class="nav navbar-nav navbar-right" style="font-size: 0.9em; padding-right: 20px;">

                @if (SignInManager.IsSignedIn(User))
                {
                    <li>


                        <span style="color:#000;padding:10px;position:relative;top:10px">@User.Identity.Name </span>
                        <span style="color:#fa6c58;float:right;padding:10px ">

                            <form class="form-inline" id="form_login" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                                <span onclick="logout()">Logout</span>
                            </form>
                        </span>


                    </li>
                }


              

            </ul>
        </div>


    </div>
</nav>

@functions {

  

    public void get_name(string dir, string page)
    {
        var db = new db_e();
        var list = (from a in db.CategoryMenus
                    where a.step_url1 == dir && a.step_url2 == page
                    select new { title = a.step_name, icon = a.step_icon }).FirstOrDefault();


        if (list != null)
        {
            string title = list.title;
            string icon = list.icon;

            <button type="button" class="navbar-toggle " data-toggle="collapse" data-target="" style="cursor: pointer">

                <span class="sr-only" style="cursor: pointer">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>

            </button>
            <a class="navbar-brand" href="#">

                <span style="color: #000; padding-left: 3px;">@title</span>
            </a>
        }
        else
        {
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="" style="cursor: pointer;">
                <span class="sr-only" style="cursor: pointer">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>

            </button>







            <a class="navbar-brand" href="#">
                <i class="" style="color:#808080; font-weight: bold; position: relative; top: 3px;"></i>
                <span style="color: #000; padding-left: 3px;">Ready</span>
            </a>
        }
    }
}
